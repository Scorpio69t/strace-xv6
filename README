# XV6 Strace Implementation

This project extends the XV6 operating system by incorporating `strace`, a debugging utility that monitors and records the system calls made by a process. The implementation aims to enhance debugging capabilities, offering insights into how processes interact with the kernel.

## Team Members

- Pranav Ghildiyal
- Harshit Rajpal

## Features

- **Trace System Calls**: Enable or disable tracing on demand for individual processes.
- **Selective Tracing**: Use flags to focus on specific system calls or outcomes.
- **Child Process Tracing**: Trace system calls made by child processes.
- **Readable Output**: Enhanced output formatting for improved clarity.
- **Option Handling**: Multiple options to tailor the tracing output.
- **Output to File**: Redirect tracing output to a specified file.

## Implementation Details

We integrated `strace` within the XV6 kernel, leveraging the existing `syscall.c` structure. This involved creating user-level commands (`strace on`, `strace off`, etc.) and modifying kernel-level handling to implement filtering and output options effectively.

## Getting Started

### Building XV6 with Strace

1. Clone the XV6 repository: `git clone [repository-url] xv6`
2. Navigate to the XV6 directory: `cd xv6`
3. Build XV6 with strace support: `make`

### Using Strace

Activate strace for a process:

```bash
strace on
